#!/usr/bin/env python3

import binascii
import sys

# pefile
import pefile

# pycryptodome
from Crypto.Cipher import ARC4
from Crypto.Hash import SHA

SAMPLE_PATH = sys.argv[1]


def load_pe():

    pe = pefile.PE(SAMPLE_PATH)

    for section in pe.sections:
        section_name = section.Name.decode("utf-8").rstrip("\x00")

        if section_name == ".data": # we only need .data section
            return section.get_data(section.VirtualAddress, section.SizeOfRawData)

def main():
    section_data = load_pe()
    key = section_data[16:24]
    encrypted_data = binascii.hexlify(section_data[24:272])
    hashed_key = SHA.new(key).hexdigest()[:10]
    rc4_cipher = ARC4.new(binascii.unhexlify(hashed_key))
    decrypted_config = rc4_cipher.decrypt(binascii.unhexlify(encrypted_data))
    print("# decrypted configuration:")
    print(decrypted_config.decode("utf-8"))


if __name__ == "__main__":
    main()